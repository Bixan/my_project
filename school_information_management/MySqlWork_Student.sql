
-- 创建数据库 -- 增加 删除 修改 查询
CREATE DATABASE mysqlwork_student
DROP DATABASE mysqlwork_student
ALTER DATABASE mysqlwork_student CHARACTER SET = UTF8

-- 使用数据库
use mysqlwork_student

-- 创建班级表
CREATE TABLE T_CLASS (
	CLASS_ID VARCHAR ( 255 ),
	CLASS_NAME VARCHAR ( 255 ),
PRIMARY KEY ( CLASS_ID ));

-- 创建学生表 -- 插入外键(班级ID) CONSTRAINT -- 约束
CREATE TABLE T_STUDENT (
	STU_ID VARCHAR ( 255 ),
	STU_NAME VARCHAR ( 255 ) NOT NULL,
	CLASS_ID VARCHAR ( 255 ) NOT NULL,
	PRIMARY KEY ( STU_ID ),
CONSTRAINT FK1 FOREIGN KEY ( CLASS_ID ) REFERENCES T_CLASS ( CLASS_ID ));

-- 创建课程表
CREATE TABLE T_COURSE (
	COURSE_ID VARCHAR ( 255 ),
	COURSE_NAME VARCHAR ( 255 ),
PRIMARY KEY ( COURSE_ID ));
	

-- 创建选课表 -- 符合组建PRIMARY KEY(STU_ID, COURSE_ID)
-- 添加外键的错误写法 STU_ID VARCHAR ( 255 ) REFERENCES T_STUDENT(STU_ID),
CREATE TABLE T_SELECT (
	STU_ID VARCHAR ( 255 ),
	COURSE_ID VARCHAR ( 255 ),
	SCORE FLOAT NOT NULL,
	PRIMARY KEY ( STU_ID, COURSE_ID ),
	CONSTRAINT FK2 FOREIGN KEY ( STU_ID ) REFERENCES T_STUDENT ( STU_ID ),
CONSTRAINT FK3 FOREIGN KEY ( COURSE_ID ) REFERENCES T_COURSE ( COURSE_ID ));

-- 删除表
DROP TABLE T_CLASS;
DROP TABLE T_STUDENT;
DROP TABLE T_COURSE;
DROP TABLE T_SELECT;

-- 修改表
ALTER TABLE T_CLASS; 


-- 表创建完成后,增加表中的数据(增加, 删除, 修改, 查询)
-- 增加(insert)
-- 删除(delete)
-- 修改(update)
-- 查询(select)



-- 表中插入数据
-- 班级表
INSERT INTO T_CLASS(CLASS_ID, CLASS_NAME) VALUES('CR001', '科锐1班');
-- INSERT INTO T_CLASS(CLASS_ID) VALUES('CR002');
INSERT INTO T_CLASS VALUES('CR002', '科锐2班');
INSERT INTO T_CLASS VALUES('CR003', '科锐3班');
INSERT INTO T_CLASS VALUES('CR004', '科锐4班');
INSERT INTO T_CLASS VALUES('CR005', '科锐6班');

UPDATE T_CLASS SET CLASS_NAME = '科锐5班' WHERE CLASS_ID = 'CR005';

SELECT * FROM T_CLASS;
DELETE FROM T_CLASS WHERE CLASS_ID = 'CR005' AND CLASS_NAME = '科锐5班';		-- 删除指定班级数据

-- 学生
INSERT INTO T_STUDENT VALUES('S001', '李四', 'CR001');
INSERT INTO T_STUDENT VALUES('S002', '王五', 'CR002');
INSERT INTO T_STUDENT VALUES('S003', '张三', 'CR002');
INSERT INTO T_STUDENT VALUES('S004', '小明', 'CR003');
INSERT INTO T_STUDENT VALUES('S005', '张三', 'CR004');
INSERT INTO T_STUDENT VALUES('S006', '哇哈哈', 'CR004');
INSERT INTO T_STUDENT VALUES('S008','Test','CR004');

DELETE FROM T_STUDENT WHERE STU_ID = 'S008' AND STU_NAME = 'Test' AND CLASS_ID = 'CR004';		-- 删除指定学生数据

UPDATE T_STUDENT SET STU_NAME = '李四' WHERE STU_ID = 'S008';
SELECT * FROM T_STUDENT;

-- 课程表
INSERT INTO T_COURSE VALUES('L001', 'C语言');
INSERT INTO T_COURSE VALUES('L002', 'C++'); 
INSERT INTO T_COURSE VALUES('L003', '数据结构');
INSERT INTO T_COURSE VALUES('L004', 'JAVA');
INSERT INTO T_COURSE VALUES('L005', 'JavaScript');

UPDATE T_COURSE SET COURSE_NAME = 'C#' WHERE COURSE_ID = 'L005';

DELETE FROM T_COURSE WHERE COURSE_ID = 'L005' AND COURSE_NAME = 'JavaScript';		-- 删除指定学生数据

SELECT * FROM T_COURSE;

-- 选课表
INSERT INTO T_SELECT VALUES('S001', 'L001', 60);
INSERT INTO T_SELECT VALUES('S002', 'L001', 88);
INSERT INTO T_SELECT VALUES('S003', 'L002', 99);
INSERT INTO T_SELECT VALUES('S004', 'L003', 97);

INSERT INTO T_SELECT VALUES('S004', 'L001', 99);
INSERT INTO T_SELECT VALUES('S004', 'L002', 95);
INSERT INTO T_SELECT VALUES('S005', 'L002');

INSERT INTO T_SELECT VALUES('S005', 'L003');

UPDATE T_SELECT SET COURSE_ID = 'L004' WHERE STU_ID = 'S005' AND COURSE_ID = 'L001';
DELETE FROM T_SELECT WHERE STU_ID = 'S005' AND COURSE_ID = 'L001';

SELECT * FROM T_SELECT;
-- 修改表中的字段

-- 没有指定要修改的项,表中的数据将全部修改
UPDATE T_CLASS SET CLASS_NAME = '科锐3班';

-- 条件修改
UPDATE T_CLASS SET CLASS_NAME = '科锐1班' WHERE CLASS_ID = 'CR001';
UPDATE T_CLASS SET CLASS_NAME = '科锐2班' WHERE CLASS_ID = 'CR002';
UPDATE T_CLASS SET CLASS_NAME = '科锐3班' WHERE CLASS_ID = 'CR003';

-- 删除数据
DELETE FROM T_CLASS;		-- 删除表中所有的数据
-- 条件删除 删除班级表中班级ID为 '003'的项
DELETE FROM T_CLASS WHERE CLASS_ID = 'CR001';		-- 删除表中所有的数据


-- 查询数据库中表的所有数据
SELECT * FROM T_STUDENT;
SELECT * FROM T_CLASS;
SELECT * FROM T_COURSE;
SELECT * FROM T_SELECT;


 
 -- 查询
SELECT DISTINCT STU_NAME FROM T_STUDENT;
SELECT * FROM T_STUDENT;
SELECT * FROM T_STUDENT WHERE STU_ID = 'S002';

SELECT CLASS_ID FROM T_CLASS;
SELECT CLASS_ID AS '班级编号', CLASS_NAME AS '班级名称' FROM T_CLASS;

-- 条件查询
SELECT * from T_CLASS WHERE CLASS_NAME is null;
SELECT * from T_CLASS WHERE CLASS_NAME is not null; 
--  =  >=  >  <=  <  <>  != 
-- or and not
SELECT * FROM T_CLASS WHERE CLASS_ID <> 'CR001';
SELECT * FROM T_CLASS WHERE CLASS_ID = 'CR001' and CLASS_NAME = '科锐1班';
SELECT * FROM T_CLASS WHERE CLASS_ID = 'CR002' or CLASS_NAME = '科锐2班';
SELECT * FROM T_CLASS WHERE 1 = 1 and 1 = 1;


-- 范围 
SELECT * FROM T_CLASS WHERE CLASS_ID BETWEEN 'CR001' and 'CR003';
SELECT * FROM T_CLASS WHERE CLASS_ID in('CR001', 'CR003');
SELECT * FROM T_CLASS WHERE CLASS_ID not in('CR001', 'CR003');

-- 排序
SELECT * FROM T_SELECT order by SCORE asc;	-- 升序
SELECT * FROM T_SELECT order by SCORE desc;	-- 降序
SELECT * FROM T_SELECT order by SCORE desc LIMIT 1;		-- 显示一行

-- 去除重复 
select DISTINCT CLASS_NAME FROM T_CLASS;
 

-- 子查询 
-- 显示科锐1班的所有同学
SELECT
	* 
FROM
	T_STUDENT 
WHERE
	CLASS_ID IN ( SELECT CLASS_ID FROM T_CLASS WHERE CLASS_NAME = '科锐1班' );

-- 显示科锐1班或者科锐2班的所有同学
SELECT
	* 
FROM
	T_STUDENT 
WHERE
	CLASS_ID IN ( SELECT CLASS_ID FROM T_CLASS WHERE CLASS_NAME = '科锐1班' OR CLASS_NAME = '科锐2班' );
	
-- 张三班级名称是什么
SELECT
	CLASS_NAME 
FROM
	T_CLASS 
WHERE
	CLASS_ID = ( SELECT CLASS_ID FROM T_STUDENT WHERE STU_NAME = '张三' );

-- 查表
SELECT * FROM T_COURSE;
SELECT * FROM T_SELECT;


-- 聚合函数
-- 计算总分
SELECT sum(score) FROM T_SELECT;
SELECT count(score) FROM T_SELECT;

-- 计算班级总分以及班级平均分
select STU_ID, sum(score) FROM T_SELECT group by STU_ID;
select COURSE_ID, avg(score) FROM T_SELECT group by COURSE_ID;


-- 多表组合(笛卡尔面积) 意义不大
SELECT
	T_SELECT.STU_ID,
	T_STUDENT.STU_NAME,
	T_SELECT.COURSE_ID,
	T_COURSE.COURSE_NAME,
	score 
FROM
	T_SELECT,
	T_STUDENT,
	T_COURSE 
WHERE
	T_STUDENT.STU_ID = T_STUDENT.STU_ID 
	AND T_COURSE.COURSE_ID = T_SELECT.COURSE_ID;



-- 临时表 
SELECT
	* 
FROM
	(
	SELECT
		T_SELECT.STU_ID,
		T_STUDENT.STU_NAME,
		T_SELECT.COURSE_ID,
		T_COURSE.COURSE_NAME,
		score 
	FROM
		T_SELECT,
		T_STUDENT,
		T_COURSE 
	WHERE
		T_STUDENT.STU_ID = T_SELECT.STU_ID 
		AND T_COURSE.COURSE_ID = T_SELECT.COURSE_ID 
	) table1 
WHERE
	STU_NAME = '李四';

-- 临时字段 
SELECT
	*,
	( SELECT STU_NAME FROM T_STUDENT WHERE T_STUDENT.STU_ID = T_SELECT.STU_ID ) AS 'student_name' 
FROM
	T_SELECT;

-- 谁的总分大于60 HAVING 
SELECT
	STU_ID,
	sum( score ) 
FROM
	T_SELECT 
GROUP BY
	STU_ID 
HAVING
	sum( score ) > 60;
SELECT
	STU_ID,
	sum( score ) 
FROM
	T_SELECT 
GROUP BY
	STU_ID;
	

-- GROUP BY 分组
-- exists == in   > 3 -- 谁选了哪些课程 
SELECT
	* 
FROM
	T_STUDENT 
WHERE
	STU_ID IN ( SELECT STU_ID FROM T_SELECT );
	
SELECT
	* 
FROM
	T_STUDENT 
WHERE
	EXISTS ( SELECT STU_ID FROM T_SELECT WHERE T_SELECT.STU_ID = T_STUDENT.STU_ID );
	
	
-- works
-- 1. 查找选修了课程的学生
-- 2. 查找无人选修的课程信息
-- 3. 查找选修了C++课程的学生信息
-- 4. 查找成绩大于相应课程的平均分的学生考试情况
-- 5. 查找只选修了L001的学生
-- 6. 查找选修了所有课程的学生

-- 显示数据库表信息
SELECT * FROM T_STUDENT;
SELECT * FROM T_COURSE;
SELECT * FROM T_SELECT;
	
-- 1. 查找选修了课程的学生	
SELECT * FROM T_STUDENT WHERE STU_ID IN 
( 
	SELECT DISTINCT STU_ID FROM T_SELECT
);

-- 2. 查找无人选修的课程信息 -- 将课程ID不在选课列表中的显示
SELECT * FROM T_COURSE WHERE COURSE_ID NOT IN
(
	SELECT DISTINCT COURSE_ID FROM T_SELECT
);

-- 3. 查找选修了C++课程的学生信息
SELECT * FROM T_STUDENT WHERE STU_ID IN
(
	SELECT STU_ID FROM T_SELECT WHERE COURSE_ID = 
	(
		SELECT COURSE_ID FROM T_COURSE WHERE COURSE_NAME = 'C++'
	)
);


-- 4. 查找成绩大于相应课程的平均分的学生考试情况
SELECT * FROM T_SELECT;
SELECT * FROM
(
	SELECT STU_ID, T_SELECT.COURSE_ID, SCORE, AVG FROM T_SELECT,
	(
		SELECT COURSE_ID, AVG(SCORE) AS AVG FROM T_SELECT GROUP BY COURSE_ID
	)table1 WHERE T_SELECT.COURSE_ID = table1.COURSE_ID
)table2 WHERE SCORE > AVG

-- 5. 查找只选修了L001的学生
SELECT
	* 
FROM
	T_SELECT 
GROUP BY	-- 分组
	STU_ID 
HAVING
	COUNT( COURSE_ID ) = 1 
	AND COURSE_ID = 'L001'
	
-- 6. 查找选修了所有课程的学生
SELECT
	STU_ID 
FROM
	T_SELECT 
GROUP BY
	STU_ID 
HAVING
	COUNT( COURSE_ID ) = ( SELECT COUNT( COURSE_ID ) FROM T_COURSE );

-- 连接(拼表)
SELECT STU_ID, STU_NAME FROM T_STUDENT UNION SELECT * FROM T_CLASS;